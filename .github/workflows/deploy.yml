name: Deploy XLSVC to excel.processor.jsilverman.ca

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Flask Backend
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            # Create backup of working files first
            cd ~/public_html/xlsvc
            mkdir -p backup_$(date +%Y%m%d_%H%M%S)
            cp *.py requirements.txt .htaccess passenger_wsgi.py backup_$(date +%Y%m%d_%H%M%S)/ 2>/dev/null || echo "No files to backup"

            echo "Backup created, proceeding with deployment"

      - name: Upload Backend Files via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            # Create temp directory for uploads
            mkdir -p ~/temp_xlsvc_deploy
            cd ~/temp_xlsvc_deploy

            # Clean up any previous temp files
            rm -f *.py requirements.txt 2>/dev/null || true

      - name: Transfer Files with rsync
        run: |
          # Use rsync instead of SCP action - more reliable
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            --include="*.py" \
            --include="requirements.txt" \
            --exclude="*" \
            ./ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/temp_xlsvc_deploy/

      - name: Install Dependencies and Setup Backend
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            # Move files from temp to production
            cd ~/temp_xlsvc_deploy
            cp *.py requirements.txt ~/public_html/xlsvc/

            # Navigate to production directory
            cd ~/public_html/xlsvc

            # Activate virtual environment
            source ~/virtualenv/public_html/xlsvc/3.11/bin/activate

            # Update pip and install dependencies
            pip install --upgrade pip
            pip install -r requirements.txt

            # Create passenger_wsgi.py
            cat > passenger_wsgi.py << 'WSGI_EOF'
            import os
            import sys
            sys.path.insert(0, os.path.dirname(__file__))
            from main import app as application
            WSGI_EOF

            # Create uploads directory
            mkdir -p uploads tmp
            chmod 755 uploads

            # Initialize database if it doesn't exist
            if [ ! -f xlsvc.db ]; then
              python -c "from main import init_db; init_db()" || echo "Database init skipped"
            fi

            # Create .htaccess
            cat > .htaccess << 'HTACCESS_EOF'
            RewriteEngine On
            PassengerEnabled on
            PassengerAppRoot /home/glqltckdiqd1/public_html/xlsvc
            PassengerAppType wsgi
            PassengerStartupFile passenger_wsgi.py
            PassengerPython /home/glqltckdiqd1/virtualenv/public_html/xlsvc/3.11/bin/python

            # Handle CORS preflight
            RewriteCond %{REQUEST_METHOD} OPTIONS
            RewriteRule ^(.*)$ $1 [R=200,L]

            # Handle API requests
            RewriteCond %{REQUEST_URI} ^/api/
            RewriteRule ^api/(.*)$ passenger_wsgi.py/$1 [QSA,L]

            # Handle React Router for frontend
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_URI} !^/api/
            RewriteRule . index.html [L]
            HTACCESS_EOF

            # Set permissions
            chmod 644 *.py requirements.txt .htaccess passenger_wsgi.py 2>/dev/null || true
            chmod 755 uploads

            # Clean up temp directory
            rm -rf ~/temp_xlsvc_deploy

            echo "Backend deployment complete!"

      - name: Build React Frontend
        run: |
          # Update API base URL for subdomain
          sed -i 's|http://127.0.0.1:5000/api|https://excel.processor.jsilverman.ca/api|g' src/App.jsx

          # Install and build
          npm ci
          npm run build

      - name: Deploy Frontend via rsync
        run: |
          # Deploy React build files
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            --delete-after \
            --exclude="*.py" \
            --exclude="requirements.txt" \
            --exclude="passenger_wsgi.py" \
            --exclude=".htaccess" \
            --exclude="xlsvc.db" \
            --exclude="uploads/" \
            --exclude="__pycache__/" \
            --exclude="tmp/" \
            --exclude="backup_*/" \
            dist/ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/public_html/xlsvc/

      - name: Final Setup and Restart
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            cd ~/public_html/xlsvc

            # Update .htaccess to handle both frontend and backend
            cat > .htaccess << 'FINAL_HTACCESS'
            RewriteEngine On
            PassengerEnabled on
            PassengerAppRoot /home/glqltckdiqd1/public_html/xlsvc
            PassengerAppType wsgi
            PassengerStartupFile passenger_wsgi.py
            PassengerPython /home/glqltckdiqd1/virtualenv/public_html/xlsvc/3.11/bin/python

            # Handle CORS preflight
            RewriteCond %{REQUEST_METHOD} OPTIONS
            RewriteRule ^(.*)$ $1 [R=200,L]

            # Handle API requests
            RewriteCond %{REQUEST_URI} ^/api/
            RewriteRule ^api/(.*)$ passenger_wsgi.py/$1 [QSA,L]

            # Handle React Router - serve static files first, then index.html
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_URI} !^/api/
            RewriteRule . index.html [L]
            FINAL_HTACCESS

            # Set final permissions
            find . -type f -exec chmod 644 {} \; 2>/dev/null || true
            find . -type d -exec chmod 755 {} \; 2>/dev/null || true
            chmod 755 uploads 2>/dev/null || true

            # Restart Passenger
            mkdir -p tmp
            touch tmp/restart.txt

            echo "Full deployment complete!"

      - name: Verify Deployment
        run: |
          echo "XLSVC Deployment complete!"
          echo "App: https://excel.processor.jsilverman.ca"
          echo "API Health: https://excel.processor.jsilverman.ca/api/health"
          echo ""
          echo "Testing API endpoint..."
          sleep 10
          curl -f https://excel.processor.jsilverman.ca/api/health || echo "API not responding yet - may need a few more seconds"

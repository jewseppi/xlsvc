name: Deploy XLSVC Flask Backend

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Backup existing files
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            cd ~/public_html/xlsvc

            # Create backup directory with timestamp
            backup_dir="backup_$(date +%Y%m%d_%H%M%S)"
            mkdir -p "$backup_dir"

            # Backup Python files, requirements, and config files
            cp *.py requirements.txt .htaccess passenger_wsgi.py "$backup_dir/" 2>/dev/null || echo "Some files not found for backup"

            echo "Backup created in $backup_dir"

      - name: Upload Flask Backend Files
        run: |
          # Use rsync to upload Python files
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            --include="*.py" \
            --include="requirements.txt" \
            --exclude="*" \
            ./ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/public_html/xlsvc/

      - name: Install Dependencies and Setup
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            cd ~/public_html/xlsvc

            # Activate virtual environment
            source ~/virtualenv/public_html/xlsvc/3.11/bin/activate

            # Update pip and install dependencies
            pip install --upgrade pip
            pip install -r requirements.txt

            # Create/update passenger_wsgi.py
            cat > passenger_wsgi.py << 'WSGI_EOF'
            import os
            import sys
            sys.path.insert(0, os.path.dirname(__file__))
            from main import app as application
            WSGI_EOF

            # Create directories
            mkdir -p uploads tmp
            chmod 755 uploads

            # Initialize database if it doesn't exist
            if [ ! -f xlsvc.db ]; then
              python -c "from main import init_db; init_db()" || echo "Database init skipped - no init_db function"
            fi

            # Create/update .htaccess
            cat > .htaccess << 'HTACCESS_EOF'
            RewriteEngine Off
            Options -MultiViews
            PassengerEnabled on
            PassengerAppRoot /home/glqltckdiqd1/public_html/xlsvc
            PassengerAppType wsgi
            PassengerStartupFile passenger_wsgi.py
            PassengerBaseURI /
            PassengerPython /home/glqltckdiqd1/virtualenv/public_html/xlsvc/3.11/bin/python
            ErrorDocument 404 "Not Found"
            ErrorDocument 500 "Server Error"
            HTACCESS_EOF

            # Set permissions
            chmod 644 *.py requirements.txt .htaccess passenger_wsgi.py 2>/dev/null || true
            chmod 755 uploads
            chmod 644 xlsvc.db 2>/dev/null || true

            # Restart Passenger
            touch tmp/restart.txt

            echo "Flask backend deployment complete!"

      - name: Verify Deployment
        run: |
          echo "Flask Backend Deployment Complete!"
          echo "API: https://excel.processor.jsilverman.ca/api/health"
          echo ""
          echo "Testing API endpoint..."
          sleep 15
          curl -f https://excel.processor.jsilverman.ca/api/health || echo "API not responding yet - check logs"

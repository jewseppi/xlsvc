name: Process Excel File

on:
  repository_dispatch:
    types: [process-excel]

jobs:
  process:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install LibreOffice and Python dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libreoffice python3-uno python3-pip
          pip3 install openpyxl

      - name: Download input file
        run: |
          curl -L "${{ github.event.client_payload.file_url }}" -o input.xlsx
          ls -la input.xlsx

      - name: Start LibreOffice headless
        run: |
          libreoffice --headless --invisible --nocrashreport --nodefault --nofirststartwizard --nologo --norestore --accept="socket,host=localhost,port=2002;urp;" &
          sleep 10

      - name: Process Excel file with UNO
        env:
          FILTER_RULES: ${{ github.event.client_payload.filter_rules }}
        run: |
          python3 process_uno.py > process_output.log 2>&1
          cat process_output.log

      - name: Extract deleted rows count
        id: extract_count
        run: |
          # Extract the deleted rows count from the output
          DELETED_ROWS=$(grep "Deleted" process_output.log | grep -oP '\d+' | head -1)
          echo "deleted_rows=$DELETED_ROWS" >> $GITHUB_OUTPUT
          echo "Deleted rows: $DELETED_ROWS"

      - name: Upload processed file back to server
        if: success()
        run: |
          if [ -f "output.xlsx" ]; then
            echo "✅ Processing successful - uploading to server"
            echo "Output file size: $(stat -c%s output.xlsx) bytes"
            
            # Upload the file back to the callback URL with deleted_rows count
            curl -X POST \
              -F "job_id=${{ github.event.client_payload.job_id }}" \
              -F "file=@output.xlsx" \
              -F "deleted_rows=${{ steps.extract_count.outputs.deleted_rows }}" \
              -H "Authorization: Bearer ${{ github.event.client_payload.callback_token }}" \
              "${{ github.event.client_payload.callback_url }}"
            
            echo "Upload complete!"
          else
            echo "❌ Processing failed - output.xlsx not found"
            exit 1
          fi

      - name: Notify failure
        if: failure()
        run: |
          # Notify the server that processing failed
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ github.event.client_payload.callback_token }}" \
            -d "{\"job_id\":\"${{ github.event.client_payload.job_id }}\",\"status\":\"failed\",\"error\":\"GitHub Actions workflow failed\"}" \
            "${{ github.event.client_payload.callback_url }}"

      - name: Upload as GitHub artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: processed-excel-${{ github.event.client_payload.job_id }}
          path: |
            output.xlsx
            process_output.log
          retention-days: 7
          if-no-files-found: warn
